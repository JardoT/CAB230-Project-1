You must create the following pages.
•	A search page with a form that allows users to search for items based a suburb (selected from a drop-down list), a name (entered into a text box), a rating, or by automatically determining the user’s location using HTML5 Geolocation API.
o	Geolocation tutorials: http://www.w3schools.com/html/html5_geolocation.asp, http://diveintohtml5.info/geolocation.html 
•	A sample results page, that shows the results of a search in a tabular format.  From the results table, users should be able to link to a more detailed screen for individual items.  Since you will not be implementing the database and dynamic server-side components in stage 1, your sample results page should include a few sample results hard-coded into your HTML source file.
•	A sample individual item page, with details about the item itself, as well as a list of all reviews and ratings that have been entered by users.  Since you will not be implementing the database and dynamic server-side components in stage 1, you only need to create 1 sample individual item page, and it should include a few sample reviews and ratings hard-coded into your HTML source file.
•	A user registration page, containing a form in which users are asked to enter the information required to sign up for an account.  Since you will not be implementing the database and dynamic server-side components in stage 1, your registration page does not need to submit to a server-side script.
Choose either option 1 or 2
1.	Implement JavaScript Validation
-	You must include client-side validation of the data entered using JavaScript.  Your registration page should include several different HTML form elements, including text boxes and check boxes or radio items. Your code should include validation for at least numeric input, alphabetic input, email formats, and dates. You can include validation for any other types of input that you deem appropriate. Your validation should provide helpful error reporting for the user if validation fails.
2.	Implement HTML5 Validation
-	Registration Form will use HTML5 validation only. Your registration page should include several different HTML form elements, including text boxes and check boxes or radio items. Your code should include HTML5 validation for at least numeric input, alphabetic input, email formats, and dates. You can include validation for any other types of input that you deem appropriate. Your validation should provide helpful error reporting for the user if they enter invalid data.

All of your pages should include a main content area, a header, a navigation menu, and a footer.  You may also include a sidebar.  Your navigation menu must contain the links to the other pages on the website.  Your navigation menu might be part of the header or part of the sidebar.
It is STRONGLY RECOMMENDED that you implement the requirements described above before moving on to stage 2.  This will allow you to test your client side web application, replacing your hard-coded results with the Stage 2 dynamic server-side components.
